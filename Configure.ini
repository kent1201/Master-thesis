[default]
# 要使用的gpu編號
cuda_device_number = 1
# 分割訓練集及測試集之隨機種子
random_state = 1
# trainset_percentage
trainset_percentage = 0.7
# Set random seed for reproducibility
manualSeed = 1
# model_name
embedder_name = embedder.pth
recovery_name = recovery.pth
generator_name = generator.pth
supervisor_name = supervisor.pth
discriminator_name = discriminator.pth
# gru, lstm, bi-lstm, tcn, self-attn, attn-bilstm (目前限定使用 gru)
module_name = gru
# padding value
padding_value = -17.0

[train]
# 用於訓練時的設定檔
# Dataset path: 設置你的 dataset 路徑
# Dataset_path = /home/kent1201/Documents/environments/action_base/preDataset/1
Dataset_path = /home/kent1201/Documents/Master-thesis/data/demand_data.csv
# Network path: 設置你儲存 model 的路徑 
model_path = /home/kent1201/Documents/Master-thesis/models
# save models' dir: 儲存你訓練好的模型的資料夾名稱
classification_dir = Demand_test_wgan
# training epochs: 設定三階段的訓練流程
stage1_epochs = 350
stage2_epochs = 350
stage3_epochs = 10000
# batch_size: 設定 batch size
batch_size = 5
# seq_len (row): 設定 the number of time step
seq_len = 5
# n_features (column) (traffic: 6, action: 27, stock: 6, energy: 28, demand: 13) 根據 dataset 設定 featrue numbers
n_features = 13
# hidden size (model's hidden size) 設定隱藏層的維度
hidden_size = 52
# num layers (model's layers) 設定 module 層數
num_layers = 5
# Calculate distance function (MSE, Soft_DTW) 設定 supervised loss function，目前限定 MSE
dis_func = MSE
# Adversarial loss function (default, wgan, hinge) 設定 unsupervised loss function。
uloss_func = wgan
# learning_rate 設定三階段的 learning rate
learning_rate1 = 0.0001
learning_rate2 = 0.0003
learning_rate3 = 0.00005


[GenTstVis]
# 用於產生資料，可視化與測試時的設定檔
# Real dataset path (to get min/max value): 設定真實資料集路徑
Dataset_path = /home/kent1201/Documents/Master-thesis/data/demand_data.csv
# synthetic classifical dir: 設定你要使用哪一個訓練好的模型
classification_dir = Demand_test
# Date_dir: 模型資料夾以日期進行劃分
date_dir = 17_08_2021
# 由於採用 save dictionary 的方式(方便移植到其他server使用)，load model 時需附上模型參數設定
# seq_len 
seq_len = 5
# n_features (column) (action: 27, stock: 6, energy: 28)
n_features = 13
# hidden size (model's hidden size) (For attention: column == hidden size)
hidden_size = 52
# num layers (model's layers)
num_layers = 5
# synthetic_dir (save generated data path): 儲存產生資料的路徑
syntheticDataset_path = /home/kent1201/Documents/Master-thesis/outputs
# used model_path (the action's model): 使用的 model 路徑
model_path = /home/kent1201/Documents/Master-thesis/models
# picture path: 儲存照片路徑
pic_path = /home/kent1201/Documents/Master-thesis/outputs_pic
# Save data name (For stock/energy/...): 產生的資料名稱檔案
synthetic_data_name = synthetic_demand_test_data.csv
# epoch used for model (ex: 2000_): 使用哪一 epoch 的模型
model_epoch = 1000_

[generate_data]
# 產生資料時的細節設定
# How many data you want: 產生幾倍資料，資料倍數越大則 concat 時越久
iteration=1
# model_name (the model you need): 使用 noise_decoder(generator)，data_decoder(recovery) 生產， supervisor 確保生產
recovery_name = recovery.pth
generator_name = generator.pth
supervisor_name = supervisor.pth


[data_visualization]
# 可視化時的細節設定
# PCA picture name
pca_pic_name = PCA.png
# t-sne picture name
t_sne_pic_name = t_SNE.png

[test]
# 測試時的細節設定
# trainset_percentage
trainset_percentage = 0.7
# discriminator epochs
d_num_epochs = 250
# Predictor epochs
p_num_epochs = 250
# batch_size
batch_size = 5
# learning_rate
learning_rate = 0.0001
# test iteration: 重複訓練多次取均值
test_iteration = 10


